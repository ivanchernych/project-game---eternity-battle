Index: player.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame\r\nfrom bullet import Bullet\r\nfrom item import Item\r\n\r\n\r\nclass Player(pygame.sprite.Sprite):\r\n    def __init__(self, type, controles, image_left, image_right, xCord, yCord, heart_player1, heart_player2, player1_point, player2_point, item_group, *group):\r\n        super().__init__(group[0], group[2])\r\n        self.enemy = group[-1]\r\n        self.me_group = group[0]\r\n        self.all_sprite_group = group[2]\r\n        self.bullet_group = group[1]\r\n        self.item_group = item_group\r\n        self.heart_player1 = heart_player1\r\n        self.heart_player2 = heart_player2\r\n        self.player1_point = player1_point\r\n        self.player2_point = player2_point\r\n        self.type = type\r\n        self.side = ''\r\n        self.controles = controles\r\n        self.image_left = image_left\r\n        self.image_right = image_right\r\n        if self.type == 'player1':\r\n            self.image = self.image_right\r\n            self.rect = self.image.get_rect()\r\n            self.side = 'right'\r\n        elif self.type == 'player2':\r\n            self.image = self.image_left\r\n            self.rect = self.image.get_rect()\r\n            self.side = 'left'\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n        self.rect = pygame.Rect(xCord, yCord, 73, 100)\r\n        self.speed = 4\r\n        self.jumpCount = 10\r\n        self.gravity = 0.25\r\n        self.onGround = False\r\n        self.x_speed = 0\r\n        self.y_speed = 0\r\n        self.hp = 10\r\n\r\n    def draw_heart(self):\r\n        x = 260\r\n        for _ in range(5):\r\n            pl = Item(x, 795, 'h')\r\n            self.all_sprite_group.add(pl)\r\n            self.heart_player1.append(pl)\r\n            x += 30\r\n        x = 1285\r\n        for _ in range(5):\r\n            pl = Item(x, 795, 'h')\r\n            self.all_sprite_group.add(pl)\r\n            self.heart_player2.append(pl)\r\n            x += 30\r\n\r\n    def respawn(self):\r\n        if self.type == 'player1':\r\n            self.rect.x = 50\r\n            self.rect.y = 600\r\n\r\n        elif self.type == 'player2':\r\n            self.rect.x = 1575\r\n            self.rect.y = 600\r\n\r\n    def controle(self):\r\n        keys = pygame.key.get_pressed()\r\n        if keys[self.controles['left']]:\r\n            self.x_speed = -self.speed\r\n            self.image = self.image_left\r\n            self.side = 'left'\r\n            self.mask = pygame.mask.from_surface(self.image)\r\n\r\n        if keys[self.controles['right']]:\r\n            self.x_speed = self.speed\r\n            self.image = self.image_right\r\n            self.side = 'right'\r\n            self.mask = pygame.mask.from_surface(self.image)\r\n\r\n        if keys[self.controles['jump']]:\r\n            if self.onGround:\r\n                self.y_speed = -self.jumpCount\r\n\r\n        if not self.onGround:\r\n            self.y_speed += self.gravity\r\n\r\n        self.onGround = False\r\n        self.rect.y += self.y_speed\r\n        self.collide(0, self.y_speed)\r\n\r\n        self.rect.x += self.x_speed\r\n        self.collide(self.x_speed, 0)\r\n\r\n        if not(keys[self.controles['left']] or keys[self.controles['right']]):\r\n            self.x_speed = 0\r\n\r\n    def shoot(self):\r\n        bullet = Bullet(self.rect.x, self.rect.y, self.side, self.type, self.enemy, self.item_group, self.all_sprite_group,\r\n                        self.heart_player1, self.heart_player2)\r\n        self.all_sprite_group.add(bullet)\r\n        self.bullet_group.add(bullet)\r\n\r\n    def collide(self, x, y):\r\n        for p in self.item_group:\r\n            if pygame.sprite.collide_rect(self, p):\r\n                if x > 0:\r\n                    self.rect.right = p.rect.left\r\n\r\n                if x < 0:\r\n                    self.rect.left = p.rect.right\r\n\r\n                if y > 0:\r\n                    self.rect.bottom = p.rect.top\r\n                    self.onGround = True\r\n                    self.y_speed = 0\r\n\r\n                if y < 0:\r\n                    self.rect.top = p.rect.bottom\r\n                    self.y_speed = 0\r\n\r\n    def update(self):\r\n        self.controle()\r\n        if len(self.heart_player2) == 0:\r\n            self.player1_point.append('point')\r\n            for el in self.heart_player1:\r\n                el.kill()\r\n            self.heart_player1.clear()\r\n            self.draw_heart()\r\n            self.respawn()\r\n        if len(self.heart_player1) == 0:\r\n            self.player2_point.append('point')\r\n            for el in self.heart_player2:\r\n                el.kill()\r\n            self.heart_player2.clear()\r\n            self.draw_heart()\r\n            self.respawn()\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/player.py b/player.py
--- a/player.py	
+++ b/player.py	
@@ -125,6 +125,7 @@
             self.heart_player1.clear()
             self.draw_heart()
             self.respawn()
+
         if len(self.heart_player1) == 0:
             self.player2_point.append('point')
             for el in self.heart_player2:
